# -*- coding: utf-8 -*-
"""Untitled11.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19NBLR5iG8iu8MUrhHEEG9ZGgUmulD1Zi

# Import Library
"""

import numpy as np
import pandas as pd
from sklearn.datasets import load_diabetes
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, mean_absolute_error
import matplotlib.pyplot as plt

"""# Load Dataset"""

diabetes = load_diabetes()
X, y = diabetes.data, diabetes.target

"""# Train Test Split"""

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

n_estimators_list = [50, 100, 200]

metrics = {'n_estimators': [], 'RMSE': [], 'MAE': []}

"""# PreProcessing"""

for n_estimators in n_estimators_list:
    # Inisialisasi dan melatih model
    model = RandomForestRegressor(n_estimators=n_estimators, random_state=42)
    model.fit(X_train, y_train)
    y_pred = model.predict(X_test)

    # Menghitung metrik RMSE dan MAE
    rmse = np.sqrt(mean_squared_error(y_test, y_pred))
    mae = mean_absolute_error(y_test, y_pred)

    # Menyimpan hasil metrik
    metrics['n_estimators'].append(n_estimators)
    metrics['RMSE'].append(rmse)
    metrics['MAE'].append(mae)

"""# Result"""

result_df = pd.DataFrame(metrics)
print(result_df)

"""# Loading Best Model"""

best_model_idx = result_df['RMSE'].idxmin()
best_n_estimators = result_df.loc[best_model_idx, 'n_estimators']
best_rmse = result_df.loc[best_model_idx, 'RMSE']
best_mae = result_df.loc[best_model_idx, 'MAE']

print(f"\nBest Model (n_estimators={best_n_estimators}):")
print(f"RMSE: {best_rmse}")
print(f"MAE: {best_mae}")

"""# Visualisasi"""

plt.figure(figsize=(10, 6))
plt.scatter(y_test, y_pred, color='blue')
plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], linestyle='--', color='red', linewidth=2)
plt.title('Actual vs Predicted (Best Model)')
plt.xlabel('Actual')
plt.ylabel('Predicted')
plt.show()